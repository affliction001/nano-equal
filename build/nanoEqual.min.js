/**
 * nano-equal - Simple and fast realization of deep equal
 * @version v1.0.0
 * @link https://github.com/smelukov/NanoEqual#readme
 * @license MIT
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.nanoEqual=t():e.nanoEqual=t()}(this,function(){return function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t){function r(e,t){return e.length===t.length?e.every(function(e,r){return a(e,t[r])}):!1}function n(e,t){if(e===t)return!0;var r=Object.keys(e),n=Object.keys(t);return r.length===n.length?r.every(function(r){return e[r]===e||t[r]===t?e[r]===t[r]:t.hasOwnProperty(r)&&a(e[r],t[r])}):!1}function o(e){if(Array.isArray(e))return!0;var t=e.length;return"number"==typeof t&&t>=0?t>0?0 in e&&t-1 in e:!0:!1}function u(e){var t=typeof e;return"object"===t&&(t=e?e instanceof Date?"date":o(e)?"array":"object":"null"),t}function a(e,t){var o=u(e),a=u(t);if(o!==a)return!1;switch(o){case"object":return n(e,t);case"array":return r(e,t);case"date":return e.getTime()===t.getTime();default:return e!==e&&t!==t?!0:e===t}}e.exports=a}])});
//# sourceMappingURL=nanoEqual.min.js.map